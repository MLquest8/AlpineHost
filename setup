#!/bin/sh
# Make sure only root can run the script
if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root" 1>&2
   exit 1
fi

# Require confirmation before proceeding
echo "====================================================="
echo "REMINDER: SET YOUR ROOT PASSWORD BEFORE PROCEEDING!!!"
echo "====================================================="
echo "                                                     "
read -p "If you're satisfied with the script type 'yes' to proceed : " PROMPT
if [[ "$PROMPT" != "yes" ]]; then
    exit
fi

echo "====================================================="
echo "Set up essentials: timezones, locale, network, etc..."
echo "====================================================="

# Set the time zone and generate /etc/adjtime
ln -sf /usr/share/zoneinfo/Asia/Tbilisi /etc/localtime
hwclock --systohc

# Generate locale
sed -i 's/#en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
locale-gen

# Set the LANG variable
echo "LANG=en_US.UTF-8" > /etc/locale.conf

# Create the hostname file: 
read -p "Enter hostname for the machine: " hostname
echo "$hostname" > /etc/hostname

echo "127.0.0.1	localhost" >> /etc/hosts
echo "::1       localhost" >> /etc/hosts
echo "127.0.1.1	$hostname" >> /etc/hosts

echo "====================================================="
echo "Installing packages from the official repositories..."
echo "====================================================="

# Install everything
sed -i '/^#.*ParallelDownloads/s/^#//' /etc/pacman.conf
pacman -S $(grep -v "^#" setup-paclist)

# Install grub into /boot
grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB
grub-mkconfig -o /boot/grub/grub.cfg

# Activate systemd services
systemctl enable systemd-timesyncd
systemctl enable systemd-resolved
systemctl enable NetworkManager

echo "====================================================="
echo "Packages installed. Compiling the rest from source..."
echo "====================================================="

# Compile executables
mkdir executables
cd executables

	# DWM
	git clone https://github.com/vipolar/dwm.git && cd dwm
	make install
	cd ..

	# DMENU
	git clone https://github.com/vipolar/dmenu.git && cd dmenu
	make install
	cd ..

	# ST
	git clone https://github.com/vipolar/st.git && cd st
	make install
	cd ..

	# Ponymix
	git clone https://github.com/falconindy/ponymix.git && cd ponymix
	make install
	cd ..

	# Tulizu
	git clone https://github.com/loh-tar/tulizu.git && cd tulizu
	make install
	tulizu install arch-rson451.issue
	cd ..

# Back to main directory
cd ..

echo "====================================================="
echo "Sources compiled. Adding user and editing dotfiles..."
echo "====================================================="

# Add a user and give them privileges
read -p "Enter username for the new user: " username
useradd -m -g users -G wheel,video,audio,input -s /bin/zsh $username
echo "$username ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/$username
chmod 0440 /etc/sudoers.d/$username
passwd $username

# Find homedir of the new user
homedir=$(awk -F: -v v="$username" '{if ($1==v) print $6}' /etc/passwd)

# set up Quad9 dns
echo -e '[global-dns-domain-*]\nservers=9.9.9.9\n' > /etc/NetworkManager/conf.d/dns-servers.conf

# Install and configure OhMyZsh
su -l $username -c 'sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended'
sed -i 's/ZSH_THEME="robbyrussell"/ZSH_THEME="bira"/' $homedir/.zshrc
sed -i 's/plugins=(git)/plugins=(git sudo)/' $homedir/.zshrc
chsh -s $(which zsh) $username

# Copy and link dotfiles
mkdir -p $homedir/.config/
cp -a -f Config/. $homedir/.config/
ln -sf $homedir/.config/.* $homedir/
chown -R $username:users $homedir/.config/

# Copy X configs
cp -a -f ConfigX/. /etc/X11/xorg.conf.d/

# Copy user scripts to PATH
cp -a -f Scripts/. /usr/local/bin

# Update font cache
fc-cache -fv

echo "====================================================="
echo "Installation finished successfully! Press ENTER to..."
echo "====================================================="
read && reboot
